---
- name: DOCKER
  hosts: localhost
  tasks:
          - name: Install required system packages
            become: true
            register: repo_code
            apt: name={{ item }} state=latest
            loop: [ 'apt-transport-https', 'lsb-release', 'python-pip', 'ca-certificates', 'curl', 'sudo', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
        
          - name: Register code_changed variable
            set_fact:
              code_changed: repo_code.changed

          - name: Add php
            become: true
            get_url:
              url: "https://packages.sury.org/php/apt.gpg"
              dest: /etc/apt/trusted.gpg.d/php.gpg
            when: code_changed

          - name: Add php(2)
            become: true
            shell: echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" >> /etc/apt/sources.list.d/php.list
            when: code_changed

          - name: Upgrade package
            become: true
            apt:
              update_cache: yes      
              upgrade: yes   
            when: code_changed

          - name: Install Php
            become: true
            apt: name={{ item }} update_cache=yes state=latest
            loop: [ 'php7.3-curl', 'php7.3-gd', 'php7.3-intl', 'php7.3-json', 'php7.3-mbstring', 'php7.3-xml', 'php7.3-zip', 'php7.3', 'composer', 'python-apt' ]
            when: code_changed

          - name: Config Sudo
            template: src=templates/sudo.j2 dest=/etc/sudoers
            when: code_changed

          - name: Composer install
            become: yes
            become_user: trr
            command: sudo composer -d=/root/docker/pingouin-du-web/apps/my-symfony-app/ install

          - name: Yarn install
            become: true
            apt_key:
              url: https://dl.yarnpkg.com/debian/pubkey.gpg
              state: present

          - name: Yarn install(2)
            become: true
            shell: echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

          - name: Upgrade package
            become: true
            apt:
              update_cache: yes
              upgrade: yes
       
          - name: Yarn install(3)
            apt: name=yarn state=present

          - name: Nodejs install
            shell: curl -sL https://deb.nodesource.com/setup_12.x | bash - && apt-get install -y nodejs

          - name: Yarn install cmd
            become: true
            command: yarn install

          - name: Yarn encore dev
            become: true
            command: yarn encore dev

          - name: ADD Docker GPG apt Key
            become: true
            apt_key:
              url: https://download.docker.com/linux/debian/gpg
              state: present
            when: code_changed

          - name: Add Docker Repository for Debian 10
            become: true
            apt_repository:
              repo: deb https://download.docker.com/linux/debian buster stable
              state: present
            when: (ansible_distribution == "Debian") and
                  (ansible_distribution_major_version == "10") 

          - name: Add Docker Repository for Debian 9
            become: true
            apt_repository:
              repo: deb https://download.docker.com/linux/debian stretch stable
              state: present
            when: (ansible_distribution == "Debian") and
                  (ansible_distribution_major_version == "9")

          - name: Update apt and install docker-ce
            become: true
            apt: name=docker-ce state=latest
            when: code_changed

          - name: Install Docker Module for Python
            become: true
            pip:
              name: docker
            when: code_changed

          - name: Network
            become: true
            docker_network:
              name: ndi

          - name: MYSQL Container
            become: true
            docker_container:
              name: mysqli
              image: mysql:5
              networks:
                - name: ndi
              restart_policy: always
              state: 'started'
              env:
                MYSQL_USER: 'root'
                MYSQL_PASSWORD: ''
                MYSQL_ROOT_PASSWORD: ''
                MYSQL_DATABASE: 'nightInfo'
                MYSQL_PORT: '9000'
                port: '9000:9000'
                volumes: './data/mysql:/var/lib/mysql'

          - name: PHP Image
            become: true
            command: docker build . -f docker/php/Dockerfile -t php

          - name: PHP Container
            become: true
            docker_container:
              name: php
              hostname: php
              image: php
              networks:
                - name: ndi
              restart_policy: on-failure
              state: 'started'
              volumes:
               - ./apps/my-symfony-app/:/usr/src/app
               - ./point.env:/usr/src/app/.env
              env_file: ./.env 

          - name: Waiting
            become: true
            shell: 'sleep 5 ; echo "Fin du sleep!!" '

          - name: NGINX Container
            become: true
            docker_container:
              name: nginx
              image: nginx:1.15.3-alpine
              networks:
                - name: ndi
              restart_policy: on-failure
              state: 'started'
              volumes:
               - ./apps/my-symfony-app/:/usr/src/app
               - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
               - ./docker/nginx/mimes.types:/etc/nginx/conf.d/mimes.types
              ports:
               - "8080:80"

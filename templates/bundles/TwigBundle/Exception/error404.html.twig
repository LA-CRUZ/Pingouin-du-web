{# templates/bundles/TwigBundle/Exception/error404.html.twig #}
{% extends 'layout.html.twig' %}

{# {% block menu %}
    {% include "_menu.html.twig" with {
        'active': 'home'
    } %}
{% endblock %} #}

{% block main_content %}
    <div id="frame"></div>
    
    <script>
        var myGamePiece;
        var LEFT, UP, RIGHT, DOWN;

        function startGame() {  
            myGameArea.start();
            myGamePiece = new component(38, 48, '{{ asset("build/images/character/2_side.png")}}', 10, 10, "image");
        }
  
        var myGameArea = {
            canvas : document.createElement("canvas"),
            start : function() {
                wall = document.createElement("div");
                wall.id = "wall";
                document.querySelector("#frame").appendChild(wall);
                door = document.createElement("div");
                door.id = "door";
                wall.appendChild(door);
                this.context = this.canvas.getContext("2d");
                this.canvas.width = 1160;
                this.canvas.height = 740;
                {# document.body.insertBefore(this.canvas, document.body.childNodes[0]); #}                
                document.querySelector("#frame").appendChild(myGameArea.canvas);
                this.interval = setInterval(updateGameArea, 20);
                deskImg = document.createElement("img");
                deskImg.id = "deskImg";
                deskImg.src = '{{ asset("build/images/environment/desk.png")}}';
                document.querySelector("#frame").appendChild(deskImg);
                char = document.createElement("div");
                char.id = "charImg"
                charImg = document.createElement("p");
                charImg.id = "charE";
                charImg.onmouseover = function() {
                    animateScript();
                };
                charImg.onmouseout = function() {
                    stopAnimate();
                };
                char.appendChild(charImg);
                document.querySelector("#frame").appendChild(char);
            },
            clear : function() {
                this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
            }
            
        }
        
        function component(width, height, color, x, y, type) {
            if (type == "image") {
                this.image = new Image();
                this.id = "char";
                this.image.src = color;
            }
            this.width = width;
            this.height = height;
            this.x = x;
            this.y = y;
            this.speed = 3;
            this.update = function(){
                ctx = myGameArea.context;
                if (type == "image") {
                    ctx.drawImage(this.image,
                        this.x,
                        this.y,
                        this.width, this.height);
                } else {
                ctx.fillStyle = color;
                ctx.fillRect(this.x, this.y, this.width, this.height);
                }
            };
            this.newPos = function() {
                if (LEFT) this.x -= this.speed;
                if (RIGHT) this.x += this.speed;
                if (UP) this.y -= this.speed;
                if (DOWN) this.y += this.speed;
            };
        }

        function updateGameArea() {
            myGameArea.clear();
            myGamePiece.newPos();
            myGamePiece.update();
        }

        document.onkeydown = function(e){
            if(e.keyCode == 37) LEFT = true;
            if(e.keyCode == 39) RIGHT = true;
            if(e.keyCode == 38) UP = true;
            if(e.keyCode == 40) DOWN = true;
        }

        document.onkeyup = function(e){
            if(e.keyCode == 37) LEFT = false;
            if(e.keyCode == 39) RIGHT = false;
            if(e.keyCode == 38) UP = false;
            if(e.keyCode == 40) DOWN = false;
        }

        startGame();
    </script>
{% endblock %}